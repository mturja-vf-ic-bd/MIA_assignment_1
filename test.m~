m = 256;
n = 256;
p = 2;
q = 4;

cx = 256;
cy = 256;
rad = input('Enter radius: ');
intensity = [1, 0.5];
enforce = 1;
polarity = 0;
sigmoid = [0.2, 0.3];
scale = 0.7;

% Create an image
if exist('img.png') && enforce == 0
    I = imread('img.png');
else 
    I = drawRandomDisks(256, 256, [30; 30], [256; 256], 3, [25 25 40], [0.4 0.7 1], [1 0.5 .2], [0.1 0.4 0.1], polarity);
end

imwrite(I, 'img.png');

% Calculate the derivate if it is not cached and not enforced
if exist('Der.txt') == 2 && enforce_grad == 0
    Der = dlmread('Der.txt');
else
    [dx, dy] = Derivative(Img, scale);
    Der = normcdf(sqrt(dx .* dx + dy .* dy), sigmoid(1, 1), sigmoid(1, 2)); % normcdf for smooting
    dlmwrite('Der.txt', Der);
end

subplot(p, q, 1);
imshow(I);
title('Original');

[acc, Der] = deriveAccumulator(Der, rad, 1, 10, 0.3);
[x, y] = getMaxCoordinate(acc);

for i = 1:2
    acc = removePoint(acc, x, y, rad, Der);

    [x, y] = getMaxCoordinate(acc);
    I = I + drawCircle(I, [x y rad]);
end




